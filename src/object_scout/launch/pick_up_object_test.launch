<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This launch file initializes the scan_and_approach_node which combines
the functionality of move_to_pose_scan and approach_object nodes.

Command to use with interbotix nav stack:
roslaunch interbotix_xslocobot_nav xslocobot_nav_2.launch robot_model:=locobot_wx250s use_lidar:=true localization:=true
-->


<launch>
    <!-- Robot name parameter -->
    <arg name="robot_name" default="locobot" />
    <arg name="robot_model" default="locobot_wx250s" />

    <arg name="keypoint_angle_topic" default="/$(arg robot_name)/camera/yolo/object_angle" />
    <arg name="enable_keypoint_detection_service" default="/$(arg robot_name)/keypoint_detector/set_enabled" />
    
    <!-- Launch the pickup object test node -->
    <node name="pickup_object_test" pkg="object_scout" type="pickup_object_test_node.py" output="screen">
        <param name="robot_name" value="$(arg robot_name)"/>
        <param name="keypoint_angle_topic" value="$(arg keypoint_angle_topic)"/>
        <param name="enable_keypoint_detection_service" value="$(arg enable_keypoint_detection_service)"/>
    </node>

    <!-- pointcloud filtering arguments -->
    <arg name="use_perception"                    default="true"/>
    <arg name="use_armtag"                        default="true"/>
    <arg name="filter_params"                     default="$(find interbotix_xslocobot_perception)/config/filter_params.yaml"/>
    <arg name="use_pointcloud_tuner_gui"          default="false"/>
    <arg name="enable_pipeline"                   default="$(arg use_pointcloud_tuner_gui)"/>
    <arg name="use_static_transform_pub"          default="true"/>

    <include if="$(arg use_perception)" file="$(find interbotix_xslocobot_perception)/launch/xslocobot_perception.launch">
        <arg name="robot_model"                       value="$(arg robot_model)"/>
        <arg name="robot_name"                        value="$(arg robot_name)"/>
        <arg name="launch_driver"                     value="false"/>
        <arg name="filter_params"                     value="$(arg filter_params)"/>
        <arg name="enable_pipeline"                   value="false"/>
        <arg name="use_pointcloud_tuner_gui"          value="$(arg use_pointcloud_tuner_gui)"/>
        <arg name="use_static_transform_pub"          value="$(arg use_static_transform_pub)"/>
        <arg name="use_armtag"                        value="$(arg use_armtag)"/>
    </include>

    
</launch>