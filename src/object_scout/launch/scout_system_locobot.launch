<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This launch file initializes the scan_and_approach_node which combines
the functionality of move_to_pose_scan and approach_object nodes.

Command to use with interbotix nav stack:
roslaunch interbotix_xslocobot_nav xslocobot_nav_2.launch robot_model:=locobot_wx250s use_lidar:=true localization:=true
-->


<launch>
    <!-- Robot name parameter -->
    <arg name="robot_name" default="locobot" />
    <arg name="robot_model" default="locobot_wx250s" />
    
    <!-- Configuration file path -->
    <arg name="poses_config" default="$(find object_scout)/config/poses.yaml" />
    <arg name="max_objects" default="3" />

    <!-- Topic parameters -->
    <arg name="camera_info_topic" default="/$(arg robot_name)/camera/color/camera_info" />
    <arg name="depth_topic" default="/$(arg robot_name)/camera/depth/image_rect_raw" />
    <arg name="object_marker_topic" default="/$(arg robot_name)/object_markers" />
    <arg name="bbox_depth_topic" default="/$(arg robot_name)/camera/yolo/bbox_depth" />
    <arg name="costmap_topic" default="/$(arg robot_name)/move_base/global_costmap/costmap" />
    <arg name="move_base_topic" default="/$(arg robot_name)/move_base" />
    <arg name="move_base_cancel_topic" default="/$(arg robot_name)/move_base/cancel" />
    <arg name="camera_joint_topic" default="/$(arg robot_name)/commands/joint_group" />
    <arg name="keypoint_angle_topic" default="/$(arg robot_name)/camera/yolo/object_angle" />
    <arg name="enable_keypoint_detection_service" default="/$(arg robot_name)/keypoint_detector/set_enabled" />

        <!-- Pass all parameters to the coordinator node -->
    <node name="scout_coordinator" pkg="object_scout" type="scout_coordinator_locobot_node.py" output="screen">
        <param name="robot_name" value="$(arg robot_name)" />
        <param name="poses_config" value="$(arg poses_config)" />
        <param name="max_objects" value="$(arg max_objects)" />
        <param name="object_marker_topic" value="$(arg object_marker_topic)" />
        <param name="bbox_depth_topic" value="$(arg bbox_depth_topic)" />
        <param name="camera_info_topic" value="$(arg camera_info_topic)" />
        <param name="depth_topic" value="$(arg depth_topic)" />
        <param name="costmap_topic" value="$(arg costmap_topic)" />
        <param name="move_base_topic" value="$(arg move_base_topic)" />
        <param name="move_base_cancel_topic" value="$(arg move_base_cancel_topic)" />
        <param name="camera_joint_topic" value="$(arg camera_joint_topic)" />
        <param name="keypoint_angle_topic" value="$(arg keypoint_angle_topic)" />
        <param name="enable_keypoint_detection_service" value="$(arg enable_keypoint_detection_service)" />
    </node>

    <!-- pointcloud filtering arguments -->
    <arg name="use_perception"                    default="true"/>
    <arg name="use_armtag"                        default="true"/>
    <arg name="filter_params"                     default="$(find interbotix_xslocobot_perception)/config/filter_params.yaml"/>
    <arg name="use_pointcloud_tuner_gui"          default="false"/>
    <arg name="enable_pipeline"                   default="$(arg use_pointcloud_tuner_gui)"/>
    <arg name="use_static_transform_pub"          default="true"/>

    <include if="$(arg use_perception)" file="$(find interbotix_xslocobot_perception)/launch/xslocobot_perception.launch">
        <arg name="robot_model"                       value="$(arg robot_model)"/>
        <arg name="robot_name"                        value="$(arg robot_name)"/>
        <arg name="launch_driver"                     value="false"/>
        <arg name="filter_params"                     value="$(arg filter_params)"/>
        <arg name="enable_pipeline"                   value="false"/>
        <arg name="use_pointcloud_tuner_gui"          value="$(arg use_pointcloud_tuner_gui)"/>
        <arg name="use_static_transform_pub"          value="$(arg use_static_transform_pub)"/>
        <arg name="use_armtag"                        value="$(arg use_armtag)"/>
    </include>

    
    <!-- RViz (conditionally launched) -->
    <group if="$(arg use_rviz)">
        <node name="rviz" pkg="rviz" type="rviz" 
                args="-f $(arg rviz_frame) -d $(arg rvizconfig)"
                ns="$(arg robot_name)">
            <remap from="/clicked_point" to="clicked_point"/>
            <remap from="/initialpose" to="initialpose"/>
            <remap from="/move_base_simple/goal" to="move_base_simple/goal"/>
        </node>
    </group>
</launch>